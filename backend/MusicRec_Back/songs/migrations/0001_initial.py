# Generated by Django 5.1.6 on 2025-03-03 16:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('artist', models.CharField(max_length=50)),
                ('spotify_preview_url', models.URLField()),
                ('spotify_id', models.CharField(max_length=50)),
                ('tags', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('duration_ms', models.IntegerField()),
                ('danceability', models.FloatField()),
                ('energy', models.FloatField()),
                ('key', models.FloatField()),
                ('loudness', models.FloatField()),
                ('mode', models.IntegerField()),
                ('speechiness', models.FloatField()),
                ('acousticness', models.FloatField()),
                ('instrumentalness', models.FloatField()),
                ('liveness', models.FloatField()),
                ('valence', models.FloatField()),
                ('tempo', models.FloatField()),
                ('time_signature', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='LikedSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='songs.song')),
            ],
            options={
                'unique_together': {('user', 'song')},
            },
        ),
    ]
